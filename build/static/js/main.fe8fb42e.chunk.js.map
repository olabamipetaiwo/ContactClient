{"version":3,"sources":["context/auth/authContext.js","context/contact/contactContext.js","components/layout/navbarComponent.jsx","components/layout/notFoundComponent.jsx","context/alert/alertContext.js","components/layout/alertsComponent.jsx","components/contacts/contactItemComponent.jsx","components/contacts/contactsComponent.jsx","components/contacts/contactFormComponent.jsx","components/contacts/contactsFilterComponent.jsx","components/pages/homeComponent.jsx","components/auth/registerComponent.jsx","components/auth/loginComponent.jsx","utils/setAuthToken.js","components/routing/privateRouteComponent.jsx","components/pages/aboutComponent.jsx","context/contact/contactReducer.js","context/types.js","context/contact/ContactState.js","context/auth/authReducer.js","context/auth/AuthState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["authContext","createContext","contactContext","NavBar","useContext","AuthContext","ContactContext","isAuthenticated","logOut","token","clearContacts","guestLinks","className","to","authLinks","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NotFound","alertContext","Alerts","alerts","AlertContext","length","map","alert","key","msg","ContactItemComponent","contact","deleteContact","setCurrent","_id","name","email","charAt","toUpperCase","slice","e","preventDefault","Contacts","contacts","filtered","TransitionGroup","index","ContactForm","addContact","currentContact","currentSet","clearCurrent","updateContact","useState","phone","setContact","useEffect","onChange","target","value","onSubmit","method","htmlFor","required","checked","console","log","ContactsFilterComponent","filterContacts","clearFilter","text","useRef","current","ref","placeholder","keyword","Home","loadUser","user","loadContacts","localStorage","userId","mainDiv","prepDiv","Register","props","setAlert","registerUser","error","errFlag","clearErrors","registerBtn","document","querySelector","history","push","innerHTML","password","password2","setUser","minLength","autoComplete","Login","logIn","loginBtn","setAuthToken","axios","defaults","headers","common","PrivateRoute","Component","component","rest","render","About","state","action","payload","filter","regEx","RegExp","match","contactErrorFlag","contactError","ContactState","useReducer","ContactReducer","dispatch","a","Axios","get","res","data","response","post","delete","patch","Provider","contactId","children","setItem","loading","removeItem","AuthState","initialState","getItem","AuthReducer","AlertState","AlertReducer","timeout","uuid","v4","setTimeout","removeAlert","App","authIsReady","setAuthIsReady","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.fe8fb42e.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import {createContext} from 'react';\r\n\r\nconst contactContext = createContext();\r\n\r\nexport default contactContext;","import React,{Fragment,useContext} from 'react';\r\nimport { Link }  from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\n\r\nconst NavBar =() => {\r\n  const authContext = useContext(AuthContext);\r\n  const contactContext = useContext(ContactContext);\r\n  const {isAuthenticated,logOut,token} = authContext;\r\n  const {clearContacts} = contactContext;\r\n\r\n  const onLogOut = () => {\r\n    clearContacts();\r\n    logOut();\r\n  }\r\n\r\n  const guestLinks = (\r\n    <Fragment>\r\n        <Link className=\"navbar-brand\" to=\"/register\">Register</Link>\r\n        <Link className=\"navbar-brand\" to=\"/login\">Login</Link>\r\n    </Fragment>\r\n  );\r\n\r\n  const authLinks = (\r\n    <Fragment>\r\n       <Link className=\"navbar-brand\" to=\"/\">Home</Link>\r\n       <Link className=\"navbar-brand\" to=\"/about\">About</Link>\r\n       <Link className=\"navbar-brand\" onClick={onLogOut} to=\"#\">Logout</Link>\r\n    </Fragment>\r\n  );\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n       <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Contact Keeper</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n              <div className=\"navbar-nav\">\r\n                 { (!token && !isAuthenticated ) ?  guestLinks : authLinks }\r\n              </div>\r\n           </div>\r\n</nav> \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React,{Fragment} from 'react';\r\n// import { Link }  from 'react-router-dom';\r\n\r\n\r\nconst NotFound =() => {\r\n  return (\r\n    <Fragment>\r\n       <div className=\"row\">\r\n           <h2>NotFound</h2>\r\n       </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import {createContext} from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, {useContext} from 'react'\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n    const alertContext = useContext(AlertContext);\r\n    const {alerts} = alertContext;\r\n\r\n    return (\r\n        <div>\r\n            {alerts.length > 0 && \r\n            alerts.map((alert) => {\r\n                 return <div key={alert.id} className={`alert mt-2 alert-${alert.type}`}>\r\n                    {alert.msg}\r\n                 </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alerts\r\n","import React,{Fragment,useContext} from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\n\r\nconst ContactItemComponent = ({contact}) => {\r\n    const contactContext = useContext(ContactContext);\r\n    const {deleteContact,setCurrent} = contactContext;\r\n    const {_id,name,email,type } = contact;\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        deleteContact(_id);\r\n    };\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        setCurrent(_id);\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n                    <tr>\r\n                        <td>{name}</td>\r\n                        <td>{ type.charAt(0).toUpperCase() + type.slice(1) }</td>\r\n                        <td>{email}</td>\r\n                        <td>\r\n                            <button onClick={handleEdit}  className=\"btn btn-success btn-sm\">Edit</button>\r\n                            <button onClick={handleDelete} className=\"btn btn-danger btn-sm\">Delete</button>\r\n                        </td>\r\n                    </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nContactItemComponent.propTypes = {\r\n  contact:PropTypes.object.isRequired\r\n};\r\n\r\nexport default ContactItemComponent;\r\n","import React,{Fragment,useContext} from 'react';\r\nimport ContactItem from './contactItemComponent';\r\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst Contacts =() => {\r\n    const contactContext = useContext(ContactContext);\r\n    const {contacts,filtered} = contactContext;\r\n\r\n    if(contacts.length === 0) {\r\n      return <h4 className=\"text-primary\">Please add a contact</h4>\r\n    }else {\r\n      return (\r\n        <Fragment>\r\n          <TransitionGroup> \r\n              <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Email</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                      filtered != null ?\r\n                        filtered.map((contact,index) => (\r\n                            <ContactItem key={index} contact={contact} />\r\n                        )):\r\n                        contacts.map((contact,index) => (\r\n                          <ContactItem key={index} contact={contact} />\r\n                         ))\r\n                    }\r\n                    </tbody>\r\n                    \r\n                  </table>\r\n                  \r\n               </TransitionGroup>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default Contacts;\r\n","import React,{Fragment,useContext,useState,useEffect} from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst ContactForm = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const {addContact,currentContact,currentSet,clearCurrent,updateContact} = contactContext;\r\n\r\n    const [contact,setContact] = useState({\r\n        _id:'',\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        type:'personal'\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(currentSet ) {\r\n            setContact(currentContact[0]);\r\n        }else {\r\n            setContact({\r\n                _id:'',\r\n                name:'',\r\n                email:'',\r\n                phone:'',\r\n                type:'personal'\r\n            });\r\n        }\r\n    },[currentSet,currentContact]);\r\n\r\n   \r\n\r\n    const {_id,name,email,phone,type} = contact;\r\n\r\n    const onChange = (e) =>  {\r\n        setContact({\r\n            ...contact,\r\n             [e.target.name]:e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (currentSet) {\r\n            //update\r\n            updateContact(_id,contact);\r\n            setContact({\r\n                name:'',\r\n                email:'',\r\n                phone:'',\r\n                type:''\r\n            });\r\n        }else {\r\n            //add\r\n            addContact(contact);\r\n            setContact({\r\n                name:'',\r\n                email:'',\r\n                phone:'',\r\n                type:''\r\n            });\r\n        }\r\n    };\r\n\r\n    const clearForm =(e) => {\r\n        e.preventDefault();\r\n        setContact({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            type:''\r\n        });\r\n    };\r\n\r\n    const clearAll = (e) => {\r\n        e.preventDefault();\r\n        clearCurrent();\r\n        console.log(\"Contact Cleared\");\r\n    };\r\n\r\n    return (\r\n         <Fragment>\r\n                     <h4 \r\n                className=\"text-center\">\r\n                {currentSet ? 'Update Contact' : 'Add Contact'}\r\n            </h4>\r\n\r\n            <form onSubmit={handleSubmit} method=\"post\">\r\n               <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email address:</label>\r\n                    <input \r\n                         type=\"email\" \r\n                         name=\"email\"\r\n                         className=\"form-control\" \r\n                         value={email}\r\n                         onChange={onChange} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input \r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        className=\"form-control\" \r\n                        value={name}\r\n                        onChange={onChange} required/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Phone</label>\r\n                    <input \r\n                        type=\"number\"\r\n                        name=\"phone\"\r\n                        className=\"form-control\" \r\n                        value={phone}\r\n                        onChange={onChange} required/>\r\n                </div>\r\n\r\n                <h6>Contact Type</h6>\r\n\r\n                    <input\r\n                       type=\"radio\" \r\n                       name=\"type\"\r\n                       className=\"form-control\"\r\n                       value=\"personal\"\r\n                       onChange = {onChange}\r\n                       checked={type === 'personal'} /> {' '}\r\n                        Personal\r\n\r\n               \r\n                    <input\r\n                       type=\"radio\" \r\n                       name=\"type\"\r\n                       className=\"form-control\"\r\n                       value=\"professional\"\r\n                       onChange = {onChange}\r\n                       checked={type === 'professional'} /> {' '} \r\n                       Professional\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className= {currentSet ? 'btn btn-info' : 'btn btn-success'}>\r\n                       {currentSet ? 'Update Contact' : 'Add Contact'}\r\n                    </button>\r\n\r\n                    <div className=\"row\">\r\n                     <button onClick={clearForm}  className=\"btn btn-danger\">\r\n                        Clear\r\n                    </button>\r\n\r\n                    <button onClick={clearAll}  className=\"btn btn-danger\">\r\n                        Clear All\r\n                    </button>\r\n                  </div> \r\n                </div>               \r\n            </form>\r\n         </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React,{Fragment,useContext,useRef,useEffect} from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst ContactsFilterComponent = () => {\r\n    \r\n    const contactContext = useContext(ContactContext);\r\n    const {filterContacts,clearFilter,filtered} = contactContext;\r\n    const text = useRef('');\r\n\r\n    useEffect(() => {\r\n        if(filtered == null) {\r\n            text.current.value  = \"\";      \r\n        }\r\n    });\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        let keyword = e.target.value;\r\n        if(keyword === '') {\r\n            clearFilter();\r\n        }else {\r\n            filterContacts(keyword);\r\n        }\r\n    //    if( text.current.value !== '') {\r\n    //     console.log(\"current value is : \",text.currrent.value);\r\n    //     //    filterContacts(text.currrent.value);\r\n    //    }else {\r\n    //        clearFilter();\r\n    //    }        \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n             <form>\r\n               <div className=\"form-group\">\r\n                    <input \r\n                         ref={text}\r\n                         type=\"text\"\r\n                         name=\"searchWord\" \r\n                         placeholder=\"Filter Contacts....\"\r\n                         className=\"form-control filter\" \r\n                         onChange={onChange} />\r\n                </div>\r\n          </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ContactsFilterComponent ;\r\n","import React,{Fragment,useContext,useEffect} from 'react';\r\nimport Contacts from \"../contacts/contactsComponent\";\r\nimport ContactForm from \"../contacts/contactFormComponent\";\r\nimport ContactsFilter from '../contacts/contactsFilterComponent';\r\n\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst Home =() => {\r\n  const authContext = useContext(AuthContext);\r\n  const contactContext = useContext(ContactContext);\r\n  \r\n  const {loadUser,user} = authContext;\r\n  const {loadContacts} = contactContext;\r\n\r\n \r\n   useEffect(() => {  \r\n     loadUser();\r\n     //eslint-disable-next-line\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n      loadContacts(localStorage.userId);\r\n      //eslint-disable-next-line\r\n  },[]);\r\n\r\n  const mainDiv = (\r\n      <Fragment>\r\n        <div className=\"row\">\r\n       \r\n          <div className=\"col-sm-7\">\r\n          <h2  className=\"mb2 text-primary text-center\">Welcome {(user != null) ? user.email : 'WebsiteUser'}</h2>\r\n              <ContactsFilter />\r\n              <Contacts />\r\n          </div>\r\n          <div className=\"col-sm-5\">\r\n            <ContactForm />\r\n          </div>\r\n          \r\n        </div>\r\n    </Fragment>\r\n  );\r\n\r\n  const prepDiv =(\r\n      <Fragment>\r\n        <div className=\"row\">\r\n        <h2  className=\"mb2 text-primary text-center\">Welcome {(user != null) ? user.email : 'WebsiteUser'}</h2>\r\n          <div className=\"col-sm-6\">\r\n         \r\n            <ContactForm />\r\n          </div>   \r\n        </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n         { (user != null) ? mainDiv : prepDiv}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React,{Fragment,useContext,useState,useEffect  } from 'react'\r\nimport AlertContext from  '../../context/alert/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Register = (props) => {\r\n    const alertContext = useContext(AlertContext);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const {setAlert} = alertContext;\r\n    const {registerUser,error,errFlag,clearErrors,isAuthenticated} = authContext;\r\n    const registerBtn = document.querySelector(\"#registerBtn\");\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            props.history.push('/');\r\n        }else {\r\n            if(errFlag) {\r\n                registerBtn.innerHTML = \"Register\";\r\n                setAlert(error,'danger');\r\n                clearErrors();\r\n            }\r\n        }\r\n        \r\n        //eslint-disable-next-line\r\n    },[error,isAuthenticated,props.history]);\r\n\r\n    const [user,setUser] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n    const {name,email,password,password2} =user;\r\n\r\n    const onChange = (e) =>  {\r\n        setUser({\r\n            ...user,\r\n             [e.target.name]:e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(name === '' || email === '' || password === '') {\r\n            setAlert(\"Please enter all fields\",'danger');\r\n        }else if(password !== password2) {\r\n            setAlert(\"password do not match\",'danger');\r\n        }else {\r\n            registerBtn.innerHTML = \"Registering User .................\";\r\n            registerUser({\r\n                name,\r\n                email,\r\n                password\r\n            });\r\n           // setAlert(\"Registrartion Succesfull\",'success');\r\n           // console.log(user);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                    <form onSubmit={handleSubmit} method=\"post\">\r\n                            <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email address:</label>\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        name=\"email\"\r\n                                        className=\"form-control\" \r\n                                        value={email}\r\n                                        onChange={onChange} required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                    <input \r\n                                        type=\"name\"\r\n                                        name=\"name\"\r\n                                        className=\"form-control\" \r\n                                        value={name}\r\n                                        onChange={onChange} required />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Password</label>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\" \r\n                                        value={password}\r\n                                        onChange={onChange} minLength=\"6\" autoComplete=\"on\" required />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Confirm Password</label>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        name=\"password2\"\r\n                                        className=\"form-control\" \r\n                                        value={password2}\r\n                                        onChange={onChange} minLength=\"6\" autoComplete=\"on\" required />\r\n                                </div>\r\n                                <button id=\"registerBtn\" type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                                    Register\r\n                                </button>\r\n\r\n                            </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React,{Fragment,useContext,useState,useEffect} from 'react';\r\nimport AlertContext from  '../../context/alert/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Login = (props) => {\r\n    const alertContext = useContext(AlertContext);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const {setAlert} = alertContext;\r\n    const {logIn,error,errFlag,clearErrors,isAuthenticated} = authContext;\r\n    const loginBtn = document.querySelector(\"#loginBtn\");\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            props.history.push('/');\r\n        }else {\r\n            if(errFlag) {\r\n                loginBtn.current.value = \"Login\";\r\n                setAlert(error,'danger');\r\n                clearErrors();\r\n            }\r\n        }\r\n       \r\n        //eslint-disable-next-line\r\n    },[error,isAuthenticated,props.history]);\r\n\r\n    const [user,setUser] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const {email,password} =user;\r\n\r\n    const onChange = (e) =>  {\r\n        setUser({\r\n            ...user,\r\n             [e.target.name]:e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        loginBtn.innerHTML = \"Authenticating Credentials ...............\";\r\n        if(email === '' || password === '') {\r\n            setAlert(\"Please enter all fields\",'danger');\r\n        }else {\r\n           logIn(user)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                    <form onSubmit={handleSubmit} method=\"post\">\r\n                        <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email address:</label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    name=\"email\"\r\n                                    className=\"form-control\" \r\n                                    value={email}\r\n                                    onChange={onChange} required />\r\n                            </div>\r\n                        \r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Password</label>\r\n                                <input \r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"form-control\" \r\n                                    value={password}\r\n                                    onChange={onChange} minLength=\"6\" required />\r\n                            </div>\r\n\r\n                            <button id=\"loginBtn\" type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                                 {/* <img  class=\"loginBtn-img\" src=\"img/giphy.gif\" alt=\"Loading ....\" /> */}\r\n                                  Login\r\n                                  <div className=\"loading\"></div>\r\n\r\n                            </button>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n    if(token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    }else {\r\n        delete axios.defaults.headers.common[\"x-auth-token\"];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import React, { useContext } from 'react';\r\nimport {Route,Redirect} from \"react-router-dom\"\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const {isAuthenticated,token} = authContext;\r\n\r\n    return (\r\n       <Route {...rest} render = {\r\n            props => !token && !isAuthenticated ? (\r\n               <Redirect to=\"/login\" />\r\n           ) : (\r\n               <Component {...props} />\r\n           )} />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React,{Fragment,useContext,useEffect} from 'react';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n\r\nconst About =() => {\r\n  const authContext = useContext(AuthContext);\r\n  const {loadUser} = authContext;\r\n \r\n   useEffect(() => {  \r\n     loadUser();\r\n     // eslint-disable-next-line\r\n  },[]);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n       <div className=\"row\">\r\n           <h2>About</h2>\r\n       </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import {\r\n    LOAD_CONTACTS,\r\n    CLEAR_CONTACTS,\r\n    ADD_CONTACT,\r\n    CONTACT_FAIL,\r\n    DELETE_CONTACT,\r\n    UPDATE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER\r\n } from '../types';\r\n\r\n//  let isEquivalent =require(\"../../functions/functions\");\r\n\r\nexport default(state,action) => {\r\n    switch(action.type) {\r\n        case LOAD_CONTACTS:\r\n            action.payload.map((contact) => {\r\n            //     console.log(\"Api contact is: \",contact );\r\n                return state.contacts.push(contact)\r\n            //     console.log(\"Inside Staet contact is\",state.contacts);\r\n            //     // state.contacts.map((stateContact) => {\r\n            //     //     if(isEquivalent(stateContact,contact)) {\r\n            //     //         console.log(\"This item is already inside state\")\r\n            //     //     }else {\r\n            //     //         console.log(\"This item is not in state\")\r\n            //     //     }\r\n            //     // });\r\n            });\r\n            return {\r\n                ...state\r\n            }\r\n        case CLEAR_CONTACTS:\r\n            state.contacts = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case ADD_CONTACT:\r\n            //state.contacts.push(action.payload);\r\n            return {\r\n                ...state,\r\n                contacts : [...state.contacts, action.payload]\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts : state.contacts.filter((contact) => {\r\n                    return contact._id !== action.payload\r\n                })\r\n        }\r\n        case UPDATE_CONTACT:\r\n        return {\r\n            ...state,\r\n            contacts:state.contacts.map((contact,index) => {\r\n                return contact._id === action.payload._id ? action.payload : contact\r\n            }),\r\n            currentSet:false\r\n         }\r\n        case SET_CURRENT: \r\n            return {\r\n                ...state,\r\n                currentContact: state.contacts.filter((contact) => {\r\n                    return contact._id === action.payload\r\n                }),\r\n                currentSet:true\r\n            }\r\n        case CLEAR_CURRENT: \r\n        return {\r\n            ...state,\r\n            currentContact:null,\r\n            currentSet:false\r\n        }\r\n        case FILTER_CONTACTS:\r\n        return {\r\n            ...state,\r\n            filtered:state.contacts.filter((contact) => {\r\n                const regEx = new RegExp(`${action.payload}`, 'gi');\r\n                return contact.name.match(regEx) || contact.email.match(regEx);\r\n            })\r\n        }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered:null,\r\n        }\r\n        case CONTACT_FAIL:\r\n            return {\r\n               ...state,\r\n               contactErrorFlag:true, \r\n               contactError:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const LOAD_CONTACTS = \"LOAD_CONTACTS\";\r\nexport const CLEAR_CONTACTS = \"CLEAR_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const CONTACT_FAIL = \"CONTACT_FAIL\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const FILTER_CONTACTS = \"FILTER_CONTACT\";\r\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";","import React, {useReducer} from 'react';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\nimport Axios from 'axios';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\n\r\nimport {\r\n    LOAD_CONTACTS,\r\n    CLEAR_CONTACTS,\r\n    ADD_CONTACT,\r\n    CONTACT_FAIL,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER\r\n} from  '../types';\r\n\r\nconst ContactState = (props) => {\r\n    const initialState = {\r\n        contacts:[],\r\n        currentContact:{\r\n            id:'',\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            type:''\r\n        },\r\n       // currentContact:{},\r\n        currentSet:false,\r\n        filtered:null,\r\n        contactError:null,\r\n        contactErrorFlag:false\r\n    };\r\n\r\n    const [state,dispatch] = useReducer(ContactReducer,initialState);\r\n\r\n    //Load COntacts\r\n    const loadContacts = async (userId) => {\r\n        if(localStorage.token) {\r\n            setAuthToken(localStorage.token);\r\n        }\r\n\r\n       try {\r\n        const res = await Axios.get(\"https://conkep.herokuapp.com/api/contact/\"+userId); \r\n        dispatch({\r\n            type:LOAD_CONTACTS,\r\n            payload:res.data.contacts\r\n        });\r\n       }catch(err) {\r\n           console.log(\"get contaact failed\");\r\n           console.log(\"respinse\",err.response);\r\n            dispatch({\r\n                type:CONTACT_FAIL,\r\n                payload:err\r\n            });\r\n       } \r\n    }\r\n\r\n    //Clear Contacts\r\n    const clearContacts = () => {\r\n        dispatch({\r\n            type:CLEAR_CONTACTS\r\n        })\r\n    }\r\n\r\n    //Add Contacts\r\n    const addContact = async (contact) => {\r\n        if(localStorage.token) {\r\n            setAuthToken(localStorage.token);\r\n        }\r\n\r\n       try {\r\n        console.log(contact);\r\n        const res = await Axios.post('https://conkep.herokuapp.com/api/contact',contact);\r\n        dispatch({\r\n            type:ADD_CONTACT,\r\n            payload:res.data.contact\r\n        });\r\n       }catch(err) {\r\n           console.log(\"add contaact failed\");\r\n           console.log(\"respinse\",err.response);\r\n            dispatch({\r\n                type:CONTACT_FAIL,\r\n                payload:err.response.data.msg\r\n            });\r\n       }   \r\n    };\r\n\r\n    //Delete Contact\r\n    const deleteContact =async (id) => { \r\n        try {\r\n            const res = await Axios.delete(\"https://conkep.herokuapp.com/api/contact/\"+id);\r\n            dispatch({\r\n                type:DELETE_CONTACT,\r\n                payload:res.data.contact\r\n            });\r\n           }catch(err) {\r\n               console.log(\"delete contaact failed\");\r\n               console.log(\"respinse\",err.response);\r\n                dispatch({\r\n                    type:CONTACT_FAIL,\r\n                    payload:err\r\n                });\r\n           }      \r\n    };\r\n\r\n\r\n    //set Current\r\n    const setCurrent = (contactId) => {\r\n        dispatch({\r\n            type:SET_CURRENT,\r\n            payload:contactId\r\n        });\r\n    }\r\n\r\n     //clear current\r\n     const clearCurrent = () => {\r\n        dispatch({\r\n            type:CLEAR_CURRENT\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //Update Contact\r\n    const updateContact = async (id,contact) => {\r\n        if(localStorage.token) {\r\n            setAuthToken(localStorage.token);\r\n        }\r\n       \r\n       try {\r\n        const res = await Axios.patch(\"https://conkep.herokuapp.com/api/contact/\"+id,contact); \r\n        console.log(id,\" identifies: \", res.data.contact)\r\n        dispatch({\r\n            type:UPDATE_CONTACT,\r\n            payload:res.data.contact\r\n        });\r\n       }catch(err) {\r\n           console.log(\"update contaact failed\");\r\n           console.log(\"respinse\",err.response);\r\n            dispatch({\r\n                type:CONTACT_FAIL,\r\n                payload:err\r\n            });\r\n       }\r\n    }\r\n\r\n    //Filter Contacts\r\n    const filterContacts = (keyword) => {\r\n        dispatch({\r\n            type:FILTER_CONTACTS,\r\n            payload:keyword\r\n        });\r\n    }\r\n\r\n    //Clear Filter\r\n    const clearFilter = () => {\r\n        dispatch({\r\n            type:CLEAR_FILTER\r\n        });\r\n    }\r\n\r\n   \r\n    return (\r\n        <ContactContext.Provider\r\n            value = {{\r\n                contacts:state.contacts,\r\n                currentContact:state.currentContact,\r\n                currentSet:state.currentSet,\r\n                filtered:state.filtered,\r\n                contactError:state.contactError,\r\n                contactErrorFlag:state.contactErrorFlag,\r\n                addContact:addContact,\r\n                deleteContact:deleteContact,\r\n                setCurrent:setCurrent,\r\n                clearCurrent:clearCurrent,\r\n                updateContact:updateContact,\r\n                filterContacts:filterContacts,\r\n                clearFilter:clearFilter,\r\n                loadContacts:loadContacts,\r\n                clearContacts:clearContacts\r\n            }}>\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ContactState;","\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    CLEAR_ERRORS,\r\n    AUTH_ERROR,\r\n    USER_LOADED,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT\r\n } from '../types';\r\n\r\nexport default(state,action) => {\r\n    switch(action.type) {\r\n        case USER_LOADED:\r\n            localStorage.setItem('userId',action.payload._id);\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                loading:false,\r\n                errFlag:false,\r\n                user:action.payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',action.payload.token);\r\n            // localStorage.setItem('user',action.payload.id);\r\n            return {\r\n                ...state,\r\n                token:action.payload.token,\r\n                isAuthenticated:true,\r\n                loading:true,\r\n                errFlag:falser\n        }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n            // localStorage.removeItem('user');\r\n            return {\r\n                token:null,\r\n                isAuthenticated:false,\r\n                loading:true,\r\n                user:null,\r\n                error:action.payload,\r\n                errFlag:true\r\n           }\r\n        case LOGOUT:\r\n                localStorage.removeItem('token');\r\n                // localStorage.removeItem('user');\r\n                localStorage.removeItem('userId');\r\n                return {\r\n                    token:null,\r\n                    isAuthenticated:false,\r\n                    loading:false,\r\n                    user:null\r\n               }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                   ...state,\r\n                   error:null,\r\n                   errFlag:false\r\n               }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport Axios from 'axios';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS\r\n} from  '../types';\r\n\r\nconst AuthState = (props) => {\r\n\r\n    const initialState = {\r\n       token:localStorage.getItem('token'),\r\n       isAuthenticated:false,\r\n       user:null,\r\n       loading:false,\r\n       error:null,\r\n       errFlag:false\r\n    };\r\n\r\n    const [state,dispatch] = useReducer(AuthReducer,initialState);\r\n    \r\n\r\n    //Load User\r\n    const loadUser = async () => {\r\n        if(localStorage.token) {\r\n            setAuthToken(localStorage.token);\r\n        }\r\n       try {\r\n        // const res = await Axios.get('http://localhost:5000/api/auth');\r\n        const res = await Axios.get('https://conkep.herokuapp.com/api/auth');\r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload: res.data.user\r\n        }); \r\n       }catch(err) {\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        }); \r\n       }\r\n    }\r\n\r\n    //register user\r\n    const registerUser = async (user) => {\r\n\r\n        try {\r\n            const res = await Axios.post('https://conkep.herokuapp.com/api/user',user);\r\n            dispatch({\r\n                type:REGISTER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            loadUser();\r\n        } catch(err) {\r\n            dispatch({\r\n                type:REGISTER_FAIL,\r\n                payload:err.response.data.msg\r\n            });\r\n        }\r\n       \r\n    }\r\n\r\n    //login user\r\n    const logIn = async (user) =>  {\r\n        try {\r\n            const res = await Axios.post('https://conkep.herokuapp.com/api/auth',user);\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            loadUser();\r\n        } catch(err) {\r\n            dispatch({\r\n                type:LOGIN_FAIL,\r\n                payload:err.response.data.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    //logout\r\n        const logOut = () => {\r\n            dispatch({\r\n                type: LOGOUT\r\n            });\r\n        }\r\n\r\n    //clear errors\r\n    const clearErrors= () => {\r\n        dispatch({\r\n            type: CLEAR_ERRORS\r\n        });\r\n    }\r\n   \r\n    return (\r\n        <AuthContext.Provider\r\n            value = {{\r\n                token:state.token,\r\n                isAuthenticated:state.isAuthenticated,\r\n                loading:state.loading,\r\n                user:state.user,\r\n                error:state.error,\r\n                errFlag:state.errFlag,\r\n                registerUser,\r\n                loadUser,\r\n                logIn,\r\n                logOut,\r\n                clearErrors\r\n            }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;","import {\r\n   SET_ALERT,\r\n   REMOVE_ALERT\r\n } from '../types';\r\n\r\nexport default(state,action) => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter((alert) => {\r\n                 return alert.id !== action.payload\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport uuid from 'uuid';\r\n\r\nimport {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from  '../types';\r\n\r\nconst AlertState = (props) => {\r\n\r\n    const initialState = [];\r\n\r\n    const [state,dispatch] = useReducer(AlertReducer,initialState);\r\n\r\n    // Set Alert\r\n    const setAlert = (msg,type,timeout=6000) => {\r\n        const id = uuid.v4();\r\n        dispatch({\r\n            type:SET_ALERT,\r\n            payload:{\r\n                id:id,\r\n                type:type,\r\n                msg:msg\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type:REMOVE_ALERT,\r\n                payload:id\r\n            });\r\n        },timeout);\r\n    }\r\n\r\n    // Remove Alert\r\n    const removeAlert = (id) => {\r\n        dispatch({\r\n            type:REMOVE_ALERT,\r\n            payload:id\r\n        });\r\n    }\r\n   \r\n    return (\r\n        <AlertContext.Provider\r\n            value = {{\r\n                alerts:state,\r\n                setAlert:setAlert,\r\n                removeAlert:removeAlert\r\n            }}>\r\n            {props.children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertState;","import React ,{Fragment,useEffect,useState } from 'react';\nimport { BrowserRouter as Router,Switch,Route}  from 'react-router-dom';\nimport NavBar from './components/layout/navbarComponent';\nimport NotFound from './components/layout/notFoundComponent';\nimport Alerts from './components/layout/alertsComponent';\nimport Home from './components/pages/homeComponent';\nimport Register from './components/auth/registerComponent';\nimport Login from './components/auth/loginComponent';\nimport setAuthToken from '../src/utils/setAuthToken';\nimport PrivateRoute from '../src/components/routing/privateRouteComponent';\nimport About from '../src/components/pages/aboutComponent';\n\n\n//import context providers\nimport ContactState from './context/contact/ContactState';\nimport AuthState from './context/auth/AuthState';\nimport AlertState from './context/alert/AlertState';\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nconst App =() => {\n\n  \n  const [authIsReady,setAuthIsReady] = useState(false);\n\n  useEffect(() => {\n     setAuthIsReady(true);\n     //eslint-disable-next-line\n },[]);\n\n if(authIsReady) { \n      return (\n        <AuthState>\n          <ContactState>\n            <AlertState>\n                <div className=\"container-fluid\">\n                    <Router>\n                            <Fragment>\n                              <NavBar />\n                                <Alerts />\n                                <Switch>\n                                    <PrivateRoute exact path=\"/about\" component={About}/> \n                                    <PrivateRoute exact path=\"/\" component={Home}/> \n                                    <Route exact path=\"/register\" component={Register}/> \n                                    <Route exact path=\"/login\" component={Login}/> \n                                    <Route component={NotFound} />\n                                </Switch>\n                          </Fragment>\n                    </Router>\n                </div>\n            </AlertState>\n          </ContactState>\n        </AuthState>\n    );\n }else {\n  return (\n             <div className=\"container-fluid\">\n                 <h2>Loading Content</h2>\n             </div>\n );\n }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}